[manifest]
version = "0.0.1"
priority = 0

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:set_ability(center, initial, delay_sprites)'''
position = "after"
payload = "if not center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:init(X, Y, W, H, card, center, params)'''
position = "after"
payload = "if not center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = '''function get_joker_win_sticker(_center, index)'''
position = "after"
payload = "if not _center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''effect = center.effect,'''
position = "after"
payload = "data_driven = center.data_driven,"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Loyalty Card' then'''
position = "before"
payload = '''if self.ability.data_driven then
    return calculate_data_driven_joker(self.ability.extra.effects)
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.set == "Joker" and not self.debuff then'''
position = "after"
payload = "print(self.ability.data_driven)"
match_indent = true

[[patches]]
[patches.copy]
target = "game.lua"
position = "append"
sources = [
    "datapack_loader.lua"
]

[[patches]]
[patches.copy]
target = "card.lua"
position = "append"
sources = [
    "joker_effects.lua"
]