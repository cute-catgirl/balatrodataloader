[manifest]
version = "0.0.1"
priority = 0

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:set_ability(center, initial, delay_sprites)'''
position = "after"
payload = "if not center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:init(X, Y, W, H, card, center, params)'''
position = "after"
payload = "if not center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = '''function get_joker_win_sticker(_center, index)'''
position = "after"
payload = "if not _center then return end"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''effect = center.effect,'''
position = "after"
payload = "data_driven = center.data_driven,"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Loyalty Card' then'''
position = "before"
payload = '''if self.ability.data_driven then
    return calculate_data_driven_joker(self.ability.extra.effects)
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.set == "Joker" and not self.debuff then'''
position = "after"
payload = "print(self.ability.data_driven)"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''full_UI_table.name = localize{type = 'name', set = _c.set, key = _c.key, nodes = full_UI_table.name}'''
position = "at"
payload = '''
if _c.data_driven then
    full_UI_table.name = {
        {
            n = G.UIT.O,
            config = {
                object = DynaText({
                    string = {_c.name},
                    colours = {{1,1,1,1}},
                    bump = true,
                    silent = true,
                    pop_in = 0,
                    pop_in_rate = 4,
                    maxw = 5,
                    shadow = true,
                    y_offset = -0.6,
                    spacing = math.max(0, 0.32*(17 - #_c.name)),
                    scale = (0.55 - 0.004*#_c.name)
                })
            }
        }
    }
else
    full_UI_table.name = localize{type = 'name', set = _c.set, key = _c.key, nodes = full_UI_table.name}
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''local desc_nodes = (not full_UI_table.name and full_UI_table.main) or full_UI_table.info'''
position = "before"
payload = '''print(full_UI_table.name or 'no name')'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}'''
position = "after"
payload = '''
if _c.data_driven then
    full_UI_table.name = {
        {
            n = G.UIT.O,
            config = {
                object = DynaText({
                    string = {_c.name},
                    colours = {{1,1,1,1}},
                    bump = true,
                    silent = true,
                    pop_in = 0,
                    pop_in_rate = 4,
                    maxw = 5,
                    shadow = true,
                    y_offset = -0.6,
                    spacing = math.max(0, 0.32*(17 - #_c.name)),
                    scale = (0.55 - 0.004*#_c.name)
                })
            }
        }
    }
else
    full_UI_table.name = localize{type = 'name', set = _c.set, key = _c.key, nodes = full_UI_table.name}
end
'''
match_indent = true


[[patches]]
[patches.copy]
target = "game.lua"
position = "append"
sources = [
    "datapack_loader.lua"
]

[[patches]]
[patches.copy]
target = "card.lua"
position = "append"
sources = [
    "joker_effects.lua"
]