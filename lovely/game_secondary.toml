[manifest]
version = "0.0.1"
priority = 2

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''self:load_profile(G.SETTINGS.profile or 1)'''
position = "before"
payload = '''
loadDatapacks(self)
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''self.localization = assert(loadstring(love.filesystem.read('localization/'..G.SETTINGS.language..'.lua')))()'''
position = "after"
payload = '''
self.localization = add_custom_localization(self.localization)
init_localization()
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''self.P_LOCKED = {}'''
position = "after"
payload = '''
if G.PROFILES[G.SETTINGS.profile] and G.PROFILES[G.SETTINGS.profile].datapacks then
    print(G.SETTINGS.profile)
    print(G.PROFILES[G.SETTINGS.profile].datapacks["example_pack"])
    for id, should_load in pairs(G.PROFILES[G.SETTINGS.profile].datapacks) do
        if should_load then
            local datapack = G.DATAPACKS[id]
            if datapack then
                loadDatapackContents(self, datapack.path, datapack)
            else
                print("No datapack found: " .. id)
            end
        end
    end
    self.localization = add_custom_localization(self.localization)
    init_localization()
end'''
match_indent = true